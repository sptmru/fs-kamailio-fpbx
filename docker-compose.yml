services:
  traefik:
    image: traefik:v3.0.1
    container_name: traefik
    restart: unless-stopped
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.myresolver.acme.httpchallenge=true"
      - "--certificatesresolvers.myresolver.acme.httpchallenge.entrypoint=web"
      - "--certificatesresolvers.myresolver.acme.email=${LETSENCRYPT_EMAIL}"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "traefik_letsencrypt:/letsencrypt"
    networks:
      - nw-default

  kamailio:
    image: kamailio/kamailio-ci:5.4
    container_name: kamailio
    restart: unless-stopped
    volumes:
      - "${PWD}/kamailio:/etc/kamailio:rw"
    networks:
      nw-default:
        ipv4_address: 10.1.0.200
    ports:
      - "${KAMAILIO_PORT:-5060}:${KAMAILIO_PORT:-5060}/udp"
      - "${KAMAILIO_PORT:-5060}:${KAMAILIO_PORT:-5060}"
  
  postgres_kamailio:
    container_name: postgres_kamailio
    image: postgres:16.1
    environment:
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: kamailio
    volumes:
      - postgres_kamailio_volume:/var/lib/postgresql/data
      - "${PWD}/kamailio:/etc/kamailio:rw"
      - "${PWD}/kamailio/kamailio.sql:/docker-entrypoint-initdb.d/init.sql"
    expose:
      - "5432"
    restart: unless-stopped
    networks:
      nw-default:
        ipv4_address: 10.1.0.222

  freeswitch_one:
    container_name: freeswitch_one
    build:
      context: ./freeswitch
      dockerfile: Dockerfile
    volumes:
      - freeswitch_one_conf:/usr/local/freeswitch/conf
      - "${PWD}/freeswitch/conf:/mnt/conf:ro"
    restart: unless-stopped
    expose:
      - "5080/udp"
      - "5080"
      - "8021"
    environment:
      - EXTENSION_PASSWORD=1234
    networks:
      nw-default:
        ipv4_address: 10.1.0.101
    entrypoint: ["/bin/sh", "-c", "cp -r /mnt/conf/* /usr/local/freeswitch/conf && exec /usr/local/bin/entrypoint.sh"]

  freeswitch_two:
    container_name: freeswitch_two
    build:
      context: ./freeswitch
      dockerfile: Dockerfile
    volumes:
      - freeswitch_two_conf:/usr/local/freeswitch/conf
      - "${PWD}/freeswitch/conf:/mnt/conf:ro"
    restart: unless-stopped
    expose:
      - "5080/udp"
      - "5080"
      - "8021"
    environment:
      - EXTENSION_PASSWORD=1234
    networks:
      nw-default:
        ipv4_address: 10.1.0.102
    entrypoint: ["/bin/sh", "-c", "cp -r /mnt/conf/* /usr/local/freeswitch/conf && exec /usr/local/bin/entrypoint.sh"]

  fusionpbx_one:
    container_name: fusionpbx_one
    build:
      context: ./fusionpbx
      dockerfile: Dockerfile
    restart: unless-stopped
    depends_on:
      - postgres_one
      - freeswitch_one
    volumes:
      - freeswitch_one_conf:/etc/freeswitch
    entrypoint: ["/usr/local/bin/setup-fusionpbx.sh"]
    environment:
      - ADMIN_USERNAME=${FUSIONPBX_ONE_ADMIN_USERNAME}
      - ADMIN_PASSWORD=${FUSIONPBX_ONE_ADMIN_PASSWORD}
      - DOMAIN_NAME=${FUSIONPBX_ONE_DOMAIN}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_PORT=${DB_PORT}
      - DB_NAME=${DB_NAME}
      - DB_HOST=postgres_one
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.fusionpbx_one.rule=Host(`${FUSIONPBX_ONE_DOMAIN}`)"
      - "traefik.http.routers.fusionpbx_one.entrypoints=websecure"
      - "traefik.http.routers.fusionpbx_one.tls.certresolver=myresolver"
      - "traefik.http.services.fusionpbx_one.loadbalancer.server.port=80"
    networks:
      nw-default:
        ipv4_address: 10.1.0.11

  fusionpbx_two:
    container_name: fusionpbx_two
    build:
      context: ./fusionpbx
      dockerfile: Dockerfile
    restart: unless-stopped
    depends_on:
      - postgres_two
      - freeswitch_two
    volumes:
      - freeswitch_two_conf:/etc/freeswitch
    entrypoint: ["/usr/local/bin/setup-fusionpbx.sh"]
    environment:
      - ADMIN_USERNAME=${FUSIONPBX_TWO_ADMIN_USERNAME}
      - ADMIN_PASSWORD=${FUSIONPBX_TWO_ADMIN_PASSWORD}
      - DOMAIN_NAME=${FUSIONPBX_TWO_DOMAIN}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_PORT=${DB_PORT}
      - DB_NAME=${DB_NAME}
      - DB_HOST=postgres_two
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.fusionpbx_two.rule=Host(`${FUSIONPBX_TWO_DOMAIN}`)"
      - "traefik.http.routers.fusionpbx_two.entrypoints=websecure"
      - "traefik.http.routers.fusionpbx_two.tls.certresolver=myresolver"
      - "traefik.http.services.fusionpbx_two.loadbalancer.server.port=80"
    networks:
      nw-default:
        ipv4_address: 10.1.0.12

  postgres_one:
    container_name: postgres_one
    image: postgres:16.1
    environment:
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - postgres_one_volume:/var/lib/postgresql/data
    expose:
      - "5432"
    restart: unless-stopped
    networks:
      nw-default:
        ipv4_address: 10.1.0.21

  postgres_two:
    container_name: postgres_two
    image: postgres:16.1
    environment:
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - postgres_two_volume:/var/lib/postgresql/data
    expose:
      - "5432"
    restart: unless-stopped
    networks:
      nw-default:
        ipv4_address: 10.1.0.22

networks:
  nw-default:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 10.1.0.0/24

volumes:
  postgres_one_volume: {}
  postgres_two_volume: {}
  postgres_kamailio_volume: {}
  freeswitch_one_conf: {}
  freeswitch_two_conf: {}
  traefik_letsencrypt: {}
